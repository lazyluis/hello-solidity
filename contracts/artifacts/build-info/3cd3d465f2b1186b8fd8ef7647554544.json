{
	"id": "3cd3d465f2b1186b8fd8ef7647554544",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/IMintableAndBurnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.28;\n\n/// @title IMintableAndBurnable\n/// @notice Interface for ERC20 tokens to be minted and burned by the ICS20 contract.\ninterface IMintableAndBurnable {\n    /// @notice Mint new tokens to the Escrow contract\n    /// @dev This function can only be called by an authorized contract (e.g., ICS20)\n    /// @dev This function needs to allow minting tokens to the Escrow contract\n    /// @param mintAddress Address to mint tokens to\n    /// @param amount Amount of tokens to mint\n    function mint(address mintAddress, uint256 amount) external;\n\n    /// @notice Burn tokens from the Escrow contract\n    /// @dev This function can only be called by an authorized contract (e.g., ICS20)\n    /// @dev This function needs to allow burning of tokens from the Escrow contract\n    /// @param mintAddress Address to burn tokens from\n    /// @param amount Amount of tokens to burn\n    function burn(address mintAddress, uint256 amount) external;\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/IMintableAndBurnable.sol": {
				"IMintableAndBurnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "mintAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "mintAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(address,uint256)": {
								"details": "This function can only be called by an authorized contract (e.g., ICS20)This function needs to allow burning of tokens from the Escrow contract",
								"params": {
									"amount": "Amount of tokens to burn",
									"mintAddress": "Address to burn tokens from"
								}
							},
							"mint(address,uint256)": {
								"details": "This function can only be called by an authorized contract (e.g., ICS20)This function needs to allow minting tokens to the Escrow contract",
								"params": {
									"amount": "Amount of tokens to mint",
									"mintAddress": "Address to mint tokens to"
								}
							}
						},
						"title": "IMintableAndBurnable",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(address,uint256)": "9dc29fac",
							"mint(address,uint256)": "40c10f19"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mintAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"mintAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(address,uint256)\":{\"details\":\"This function can only be called by an authorized contract (e.g., ICS20)This function needs to allow burning of tokens from the Escrow contract\",\"params\":{\"amount\":\"Amount of tokens to burn\",\"mintAddress\":\"Address to burn tokens from\"}},\"mint(address,uint256)\":{\"details\":\"This function can only be called by an authorized contract (e.g., ICS20)This function needs to allow minting tokens to the Escrow contract\",\"params\":{\"amount\":\"Amount of tokens to mint\",\"mintAddress\":\"Address to mint tokens to\"}}},\"title\":\"IMintableAndBurnable\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address,uint256)\":{\"notice\":\"Burn tokens from the Escrow contract\"},\"mint(address,uint256)\":{\"notice\":\"Mint new tokens to the Escrow contract\"}},\"notice\":\"Interface for ERC20 tokens to be minted and burned by the ICS20 contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IMintableAndBurnable.sol\":\"IMintableAndBurnable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IMintableAndBurnable.sol\":{\"keccak256\":\"0x10f79afe3c875532fe367fd690299ffe4252bce0a163bc4d3b4df340636e3752\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7248473a1a693d01013649920a9b45b938268367a7d266b8a53e4074ac2b9485\",\"dweb:/ipfs/QmWL7G13PjtfzDyUG8quZdPe1poXSE88SKRBdUhUH5j7xS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(address,uint256)": {
								"notice": "Burn tokens from the Escrow contract"
							},
							"mint(address,uint256)": {
								"notice": "Mint new tokens to the Escrow contract"
							}
						},
						"notice": "Interface for ERC20 tokens to be minted and burned by the ICS20 contract.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/IMintableAndBurnable.sol": {
				"ast": {
					"absolutePath": "contracts/IMintableAndBurnable.sol",
					"exportedSymbols": {
						"IMintableAndBurnable": [
							19
						]
					},
					"id": 20,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IMintableAndBurnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "58:118:0",
								"text": "@title IMintableAndBurnable\n @notice Interface for ERC20 tokens to be minted and burned by the ICS20 contract."
							},
							"fullyImplemented": false,
							"id": 19,
							"linearizedBaseContracts": [
								19
							],
							"name": "IMintableAndBurnable",
							"nameLocation": "186:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "213:316:0",
										"text": "@notice Mint new tokens to the Escrow contract\n @dev This function can only be called by an authorized contract (e.g., ICS20)\n @dev This function needs to allow minting tokens to the Escrow contract\n @param mintAddress Address to mint tokens to\n @param amount Amount of tokens to mint"
									},
									"functionSelector": "40c10f19",
									"id": 10,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "543:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "mintAddress",
												"nameLocation": "556:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "548:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "548:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "577:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "569:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "569:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "547:37:0"
									},
									"returnParameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "593:0:0"
									},
									"scope": 19,
									"src": "534:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "600:321:0",
										"text": "@notice Burn tokens from the Escrow contract\n @dev This function can only be called by an authorized contract (e.g., ICS20)\n @dev This function needs to allow burning of tokens from the Escrow contract\n @param mintAddress Address to burn tokens from\n @param amount Amount of tokens to burn"
									},
									"functionSelector": "9dc29fac",
									"id": 18,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "935:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "mintAddress",
												"nameLocation": "948:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "940:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 12,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "969:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "961:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:37:0"
									},
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "985:0:0"
									},
									"scope": 19,
									"src": "926:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 20,
							"src": "176:812:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "32:956:0"
				},
				"id": 0
			}
		}
	}
}